datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

// Supplier information
model Supplier {
  id        String    @id @default(uuid())
  name      String
  contact   String
  address   String
  materials Material[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// Material model for raw materials
model Material {
  id          String    @id @default(uuid())
  type        String    // Gold, Silver, Diamond, etc.
  purity      String    // 22K, 24K, etc.
  weight      Float
  unit        String    // grams, carats
  supplierId  String
  supplier    Supplier  @relation(fields: [supplierId], references: [id])
  issues      MaterialIssue[]
  returns     MaterialReturn[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  purchasePrice Float
  currentStock Float
}

// Artisan/Karigar information
model Artisan {
  id        String    @id @default(uuid())
  name      String
  contact   String
  address   String
  specialization String
  issues    MaterialIssue[]
  returns   MaterialReturn[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// Material Issue records
model MaterialIssue {
  id          String    @id @default(uuid())
  materialId  String
  material    Material  @relation(fields: [materialId], references: [id])
  artisanId   String
  artisan     Artisan   @relation(fields: [artisanId], references: [id])
  quantity    Float
  purpose     String
  issueDate   DateTime  @default(now())
  approvedBy  String
  status      String    // Pending, Approved, Completed
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Material Return records
model MaterialReturn {
  id          String    @id @default(uuid())
  materialId  String
  material    Material  @relation(fields: [materialId], references: [id])
  artisanId   String
  artisan     Artisan   @relation(fields: [artisanId], references: [id])
  quantity    Float
  wastage     Float
  returnDate  DateTime  @default(now())
  verifiedBy  String
  status      String    // Pending, Verified, Completed
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Audit Log for tracking all material movements
model AuditLog {
  id          String    @id @default(uuid())
  action      String    // Receive, Issue, Return
  description String
  userId      String
  timestamp   DateTime  @default(now())
}

model MaterialReceipt {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  receiptNumber String   @unique
  date         DateTime
  supplierName String
  materialType String
  purity       String
  weight       String
  unit         String
  purchasePrice String
  poNumber     String
  totalAmount  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
} 